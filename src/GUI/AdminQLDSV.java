/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import App.MarkApp;
import Object.SubjectMark;
import java.awt.HeadlessException;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class AdminQLDSV extends javax.swing.JFrame {

    /**
     * Creates new form QLDSV
     */
    MarkApp markApp = new MarkApp();
    ArrayList<SubjectMark> listDHP = markApp.loadFile();

    public AdminQLDSV() {
        initComponents();
        showMark(listDHP);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        textIDClass = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        textIDStudent = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        textIDSubject = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        textDiemGiuaKy = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        textDiemCuoiKy = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        textDiemTongKet = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        textDiemChu = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        textTrongSoQT = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        textDateMarkBegin = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        textDateMarkEnd = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableDiemHP = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        btnImportExcel = new javax.swing.JButton();
        btnExportExcel = new javax.swing.JButton();
        btnDateInputMark = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Quản lý điểm sinh viên");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin chi tiết", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jLabel1.setText("Mã lớp học");

        textIDClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textIDClassActionPerformed(evt);
            }
        });
        textIDClass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textIDClassKeyPressed(evt);
            }
        });

        jLabel2.setText("MSSV");

        textIDStudent.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textIDStudentKeyPressed(evt);
            }
        });

        jLabel3.setText("Mã học phần");

        textIDSubject.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textIDSubjectKeyPressed(evt);
            }
        });

        jLabel4.setText("Điểm quá trinh");

        textDiemGiuaKy.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textDiemGiuaKyKeyPressed(evt);
            }
        });

        jLabel5.setText("Điểm kết thúc HP");

        textDiemCuoiKy.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textDiemCuoiKyKeyPressed(evt);
            }
        });

        jLabel6.setText("Điểm tổng kết");

        textDiemTongKet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textDiemTongKetActionPerformed(evt);
            }
        });

        jLabel8.setText("Điểm quy đổi");

        textDiemChu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textDiemChuKeyPressed(evt);
            }
        });

        jLabel9.setText("Trọng số QT");

        textTrongSoQT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textTrongSoQTKeyPressed(evt);
            }
        });

        jLabel10.setText("Thời gian nhập điểm cho GV");

        textDateMarkBegin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textDateMarkBeginActionPerformed(evt);
            }
        });
        textDateMarkBegin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textDateMarkBeginKeyPressed(evt);
            }
        });

        jLabel11.setText("Từ ngày");

        jLabel12.setText("Kết thúc");

        textDateMarkEnd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textDateMarkEndKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textDiemCuoiKy)
                            .addComponent(textDiemTongKet)
                            .addComponent(textDiemChu)
                            .addComponent(textTrongSoQT))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textDateMarkBegin, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textDateMarkEnd))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(textDiemGiuaKy))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel10)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel2))
                                    .addGap(8, 8, 8)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(textIDClass, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                                        .addComponent(textIDStudent)))
                                .addComponent(textIDSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(textIDClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(textIDStudent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textIDSubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(textDiemGiuaKy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(textDiemCuoiKy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(textDiemTongKet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(textDiemChu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(textTrongSoQT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textDateMarkBegin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(textDateMarkEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "QUẢN LÝ ĐIỂM SINH VIÊN", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N

        tableDiemHP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã lớp học", "Mã học phần", "MSSV", "Điểm QT", "Điểm cuối kì", "Trọng số QT", "Điểm tổng kết", "Điểm quy đổi"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableDiemHP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableDiemHPMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableDiemHP);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 516, Short.MAX_VALUE))
        );

        btnAdd.setText("Thêm");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnEdit.setText("Sửa");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setText("Xóa");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnExit.setText("Thoát");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnImportExcel.setText("Nhập bằng file Excel");
        btnImportExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportExcelActionPerformed(evt);
            }
        });

        btnExportExcel.setText("Xuất excel");
        btnExportExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportExcelActionPerformed(evt);
            }
        });

        btnDateInputMark.setText("Cập nhật thời gian nhập điểm");
        btnDateInputMark.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDateInputMarkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(btnDateInputMark)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(btnAdd)
                        .addGap(18, 18, 18)
                        .addComponent(btnEdit)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete)
                        .addGap(18, 18, 18)
                        .addComponent(btnImportExcel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnExportExcel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 150, Short.MAX_VALUE)
                        .addComponent(btnExit)
                        .addGap(20, 20, 20))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnEdit)
                    .addComponent(btnDelete)
                    .addComponent(btnExit)
                    .addComponent(btnImportExcel)
                    .addComponent(btnExportExcel)
                    .addComponent(btnDateInputMark))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textIDClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textIDClassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textIDClassActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        SubjectMark sMark = new SubjectMark();
        DefaultTableModel tableModel = (DefaultTableModel) tableDiemHP.getModel();
        //add mark to file
        if (textIDClass.getText().isEmpty() || textIDStudent.getText().isEmpty() || textIDSubject.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Mã sinh viên, Mã lớp học và mã học phần không được để trống", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        } else {
            sMark.setIdLopHoc(textIDClass.getText());
            sMark.setIdSubject(textIDSubject.getText());
            sMark.setIdStudent(textIDStudent.getText());
            if (markApp.checkDiemTP(textDiemGiuaKy.getText()) == true) {
                sMark.setDiemQT(Double.parseDouble(textDiemGiuaKy.getText()));
                if (markApp.checkDiemTP(textDiemCuoiKy.getText()) == true) {
                    sMark.setDiemKT(Double.parseDouble(textDiemCuoiKy.getText()));
                    if (markApp.checkTrongSo(textTrongSoQT.getText()) == true) {
                        sMark.setTrongSoQT(Double.parseDouble(textTrongSoQT.getText()));
                        double diemTK = markApp.diemTK(textDiemGiuaKy.getText(), textDiemCuoiKy.getText(), textTrongSoQT.getText());
                        sMark.setDiemTK(diemTK);
                        sMark.setDiemChu(markApp.diemQuyDoi(Double.toString(diemTK)).toString());

                        listDHP.add(sMark);
                        markApp.saveFile(listDHP);
                        //add to table
                        textDiemTongKet.setText(Double.toString(diemTK));
                        textDiemChu.setText(markApp.diemQuyDoi(Double.toString(diemTK)));
                        tableModel.addRow(new Object[]{textIDClass.getText(), textIDSubject.getText(), textIDStudent.getText(), textDiemGiuaKy.getText(),
                            textDiemCuoiKy.getText(), textTrongSoQT.getText(), textDiemTongKet.getText(), textDiemChu.getText()});
                    } else {
                        JOptionPane.showMessageDialog(null, "Nhập sai điểm thành phần", "Lỗi nhập điểm", JOptionPane.INFORMATION_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Nhập sai điểm thành phần", "Lỗi nhập điểm", JOptionPane.INFORMATION_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Nhập sai điểm thành phần", "Lỗi nhập điểm", JOptionPane.INFORMATION_MESSAGE);
            }
        }


    }//GEN-LAST:event_btnAddActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed

        try {
            int index = tableDiemHP.getSelectedRow();
            if (markApp.checkDiemTP(textDiemGiuaKy.getText()) == true && markApp.checkDiemTP(textDiemCuoiKy.getText()) == true && markApp.checkTrongSo(textTrongSoQT.getText()) == true) {

                if (textIDClass.getText().isEmpty() || textIDStudent.getText().isEmpty() || textIDSubject.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Bạn chưa nhập ID môn học, ID sinh viên hoặc ID lớp học", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    //sửa trong bảng
                    tableDiemHP.setValueAt(textIDClass.getText(), index, 0);
                    tableDiemHP.setValueAt(textIDSubject.getText(), index, 1);
                    tableDiemHP.setValueAt(textIDStudent.getText(), index, 2);
                    tableDiemHP.setValueAt(textDiemGiuaKy.getText(), index, 3);
                    tableDiemHP.setValueAt(textDiemCuoiKy.getText(), index, 4);

                    tableDiemHP.setValueAt(textTrongSoQT.getText(), index, 5);
                    double diemTK = markApp.diemTK(textDiemGiuaKy.getText(), textDiemCuoiKy.getText(), textTrongSoQT.getText());
                    textDiemTongKet.setText(Double.toString(diemTK));
                    tableDiemHP.setValueAt(Double.toString(diemTK), index, 6);

                    tableDiemHP.setValueAt(markApp.diemQuyDoi(Double.toString(diemTK)), index, 7);
                    textDiemChu.setText(markApp.diemQuyDoi(Double.toString(diemTK)));
                    //sửa trong arrayList và cập nhật vào file
                    listDHP.get(index).setIdLopHoc(textIDClass.getText());
                    listDHP.get(index).setIdSubject(textIDSubject.getText());
                    listDHP.get(index).setIdStudent(textIDStudent.getText());
                    listDHP.get(index).setDiemQT(Double.valueOf(textDiemGiuaKy.getText()));
                    listDHP.get(index).setDiemKT(Double.valueOf(textDiemCuoiKy.getText()));
                    listDHP.get(index).setTrongSoQT(Double.valueOf(textTrongSoQT.getText()));
                    listDHP.get(index).setDiemTK(Double.valueOf(textDiemTongKet.getText()));
                    listDHP.get(index).setDiemChu(textDiemChu.getText());

                    markApp.saveFile(listDHP);
                    JOptionPane.showMessageDialog(null, "Thao tác thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                }

            } else {
                JOptionPane.showMessageDialog(null, "Nhập sai điểm thành phần", "Lỗi nhập điểm", JOptionPane.INFORMATION_MESSAGE);
            }

        } catch (HeadlessException | NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Thao tác thất bại", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        listDHP = markApp.loadFile();
        DefaultTableModel tableModel = (DefaultTableModel) tableDiemHP.getModel();
        int index = tableDiemHP.getSelectedRow();
        if (index >= 0) {

            String idDel = tableDiemHP.getValueAt(index, 2).toString();
            //delete data in table
            tableModel.removeRow(index);
            //delete data in arraylist and file
            for (int i = 0; i < listDHP.size(); i++) {
                if (listDHP.get(i).getIdStudent().equalsIgnoreCase(idDel)) {
                    listDHP.remove(i);
                    markApp.saveFile(listDHP);
                    JOptionPane.showMessageDialog(null, "Xóa thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                    break;
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Thao tác thất bại", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnImportExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportExcelActionPerformed

        try {
            JFileChooser chooser = new JFileChooser(new File("E:\\NetBeansProjects\\"));
            FileFilter fileFilter = new FileNameExtensionFilter("Excel file ", "xlsx");
            chooser.addChoosableFileFilter(fileFilter);
            chooser.showOpenDialog(null);
            File file = chooser.getSelectedFile();
            String filePath = file.getAbsolutePath();
            markApp.readExcel(filePath);
            showMark(markApp.loadFile());
        } catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Lỗi file", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        }

    }//GEN-LAST:event_btnImportExcelActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        AdminPage adminPage = new AdminPage();
        adminPage.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnExportExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportExcelActionPerformed
        JFileChooser chooser = new JFileChooser(new File("E:\\NetBeansProjects\\"));
        FileFilter fileFilter = new FileNameExtensionFilter("Excel file ", "xlsx");
        chooser.addChoosableFileFilter(fileFilter);
        chooser.setCurrentDirectory(new File("E:\\NetBeansProjects\\"));
        int retrival = chooser.showSaveDialog(null);
        if (retrival == JFileChooser.APPROVE_OPTION) {
            try {
                File fileToSave = chooser.getSelectedFile();
                exportExcel(fileToSave);
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }

    }//GEN-LAST:event_btnExportExcelActionPerformed

    private void tableDiemHPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableDiemHPMouseClicked
        DefaultTableModel tableModel = (DefaultTableModel) tableDiemHP.getModel();
        int index = tableDiemHP.getSelectedRow();
        textIDClass.setText(tableModel.getValueAt(index, 0).toString());
        textIDSubject.setText(tableModel.getValueAt(index, 1).toString());
        textIDStudent.setText(tableModel.getValueAt(index, 2).toString());
        textDiemGiuaKy.setText(tableModel.getValueAt(index, 3).toString());
        textDiemCuoiKy.setText(tableModel.getValueAt(index, 4).toString());
        textTrongSoQT.setText(tableModel.getValueAt(index, 5).toString());
        textDiemTongKet.setText(tableModel.getValueAt(index, 6).toString());
        textDiemChu.setText(tableModel.getValueAt(index, 7).toString());

    }//GEN-LAST:event_tableDiemHPMouseClicked

    private void textIDClassKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textIDClassKeyPressed
        textIDClass.setText(textIDClass.getText());
    }//GEN-LAST:event_textIDClassKeyPressed

    private void textIDStudentKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textIDStudentKeyPressed
        textIDStudent.setText(textIDStudent.getText());
    }//GEN-LAST:event_textIDStudentKeyPressed

    private void textIDSubjectKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textIDSubjectKeyPressed
        textIDSubject.setText(textIDSubject.getText());
    }//GEN-LAST:event_textIDSubjectKeyPressed

    private void textDiemGiuaKyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textDiemGiuaKyKeyPressed
        textDiemGiuaKy.setText(textDiemGiuaKy.getText());
    }//GEN-LAST:event_textDiemGiuaKyKeyPressed

    private void textDiemCuoiKyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textDiemCuoiKyKeyPressed
        textDiemCuoiKy.setText(textDiemCuoiKy.getText());
    }//GEN-LAST:event_textDiemCuoiKyKeyPressed

    private void textTrongSoQTKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textTrongSoQTKeyPressed
        textTrongSoQT.setText(textTrongSoQT.getText());
    }//GEN-LAST:event_textTrongSoQTKeyPressed

    private void textDiemTongKetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textDiemTongKetActionPerformed
        textDiemTongKet.setText(Double.toString(markApp.diemTK(textDiemChu.getText(), textDiemCuoiKy.getText(), textTrongSoQT.getText())));
    }//GEN-LAST:event_textDiemTongKetActionPerformed

    private void textDiemChuKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textDiemChuKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_textDiemChuKeyPressed

    private void textDateMarkBeginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textDateMarkBeginActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textDateMarkBeginActionPerformed

    private void btnDateInputMarkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDateInputMarkActionPerformed
        markApp.saveDateMark(textDateMarkBegin.getText(), textDateMarkEnd.getText());
    }//GEN-LAST:event_btnDateInputMarkActionPerformed

    private void textDateMarkBeginKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textDateMarkBeginKeyPressed
        textDateMarkBegin.setText(textDateMarkBegin.getText());
    }//GEN-LAST:event_textDateMarkBeginKeyPressed

    private void textDateMarkEndKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textDateMarkEndKeyPressed
        textDateMarkEnd.setText(textDateMarkEnd.getText());
    }//GEN-LAST:event_textDateMarkEndKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminQLDSV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminQLDSV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminQLDSV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminQLDSV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminQLDSV().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDateInputMark;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnExportExcel;
    private javax.swing.JButton btnImportExcel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableDiemHP;
    private javax.swing.JTextField textDateMarkBegin;
    private javax.swing.JTextField textDateMarkEnd;
    private javax.swing.JTextField textDiemChu;
    private javax.swing.JTextField textDiemCuoiKy;
    private javax.swing.JTextField textDiemGiuaKy;
    private javax.swing.JTextField textDiemTongKet;
    private javax.swing.JTextField textIDClass;
    private javax.swing.JTextField textIDStudent;
    private javax.swing.JTextField textIDSubject;
    private javax.swing.JTextField textTrongSoQT;
    // End of variables declaration//GEN-END:variables

    private void showMark(ArrayList<SubjectMark> listDHP) {
        DefaultTableModel tableModel = (DefaultTableModel) tableDiemHP.getModel();
        Object row[];
        for (int i = 0; i < listDHP.size(); i++) {
            row = new Object[8];
            row[0] = listDHP.get(i).getIdLopHoc();
            row[1] = listDHP.get(i).getIdSubject();
            row[2] = listDHP.get(i).getIdStudent();
            row[3] = listDHP.get(i).getDiemQT();
            row[4] = listDHP.get(i).getDiemKT();
            row[5] = listDHP.get(i).getTrongSoQT();
            row[6] = listDHP.get(i).getDiemTK();
            row[7] = listDHP.get(i).getDiemChu();
            tableModel.addRow(row);
        }
    }

    private void exportExcel(File fileToSave) {
        try {
            FileWriter out = new FileWriter(fileToSave + ".xls");
            BufferedWriter bw = new BufferedWriter(out);
            DefaultTableModel model = (DefaultTableModel) tableDiemHP.getModel();
            // ten Cot
            for (int j = 0; j < tableDiemHP.getColumnCount(); j++) {
                bw.write(model.getColumnName(j) + "\t");
            }
            bw.write("\n");
            // Lay du lieu dong
            for (int j = 0; j < tableDiemHP.getRowCount(); j++) {
                for (int k = 0; k < tableDiemHP.getColumnCount(); k++) {
                    bw.write(model.getValueAt(j, k) + "\t");
                }
                bw.write("\n");
            }
            bw.close();
            out.close();
            JOptionPane.showMessageDialog(null, "Lưu file thành công!");
        } catch (HeadlessException | IOException e2) {
            JOptionPane.showMessageDialog(null, "Lỗi khi lưu file!");
        }
    }
}
